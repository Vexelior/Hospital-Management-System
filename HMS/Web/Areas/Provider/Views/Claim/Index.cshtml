@model Web.Areas.Provider.Models.ViewModels.ClaimIndexViewModel
@inject Infrastructure.Data.HospitalContext Context

@{
    ViewBag.Title = "Claims";
    Layout = "~/Areas/Provider/Views/Shared/_ProviderLayout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2 class="text-center">Claims</h2>
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <form asp-action="Index" method="get">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" name="searchString" placeholder="Search by claim number or name" value="@Model.SearchString">
                    <div class="input-group-append">
                        <button class="btn btn-secondary" type="submit">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="form-group">
                    <label for="pageSize">Rows per page:</label>
                    <select class="form-control" id="pageSize" name="pageSize">
                        <option value="5" @(Model.Pagination.PageSize == 5 ? "selected" : "")>5</option>
                        <option value="10" @(Model.Pagination.PageSize == 10 ? "selected" : "")>10</option>
                        <option value="15" @(Model.Pagination.PageSize == 15 ? "selected" : "")>15</option>
                        <option value="20" @(Model.Pagination.PageSize == 20 ? "selected" : "")>20</option>
                    </select>
                </div>
            </form>
            @if (!Model.Claims.Any())
            {
                <p class="text-center">No claims found.</p>
            }
            @foreach (var claim in Model.Claims)
            {
                var patient = await Context.Patients.FindAsync(claim.PatientId);

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title">
                            <a href="@Url.Action("Details", "Claim", new {id = claim.Id})">
                                Claim #: @claim.Number
                            </a>
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">
                            Patient: @patient.LastName, @patient.FirstName
                        </p>
                        <p class="card-text">
                            Date: @claim.DateOfSubmission.ToString("MM/dd/yyyy")
                        </p>
                        <p class="card-text">
                            Status: @claim.Status
                        </p>
                        <p class="card-text">
                            Amount: <span class="TotalAmount">@claim.TotalAmount.ToString("C")</span>
                        </p>
                        <p class="card-text">
                            Paid: <span class="TotalAmount">@claim.AmountPaid.ToString("C")</span>
                        </p>
                    </div>
                </div>
            }
        </div>
    </div>

    @if (Model.Claims.Any())
    {
        <div class="row">
            <div class="col-md-12">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        @if (Model.Pagination.HasPrevious)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", "Claim", new { Area = "Provider", pageNumber = Model.Pagination.CurrentPage - 1, searchString = Model.SearchString, pageSize = Model.Pagination.PageSize })">
                                    <span aria-hidden="true">
                                        <i class="fas fa-angle-left"></i>
                                    </span>
                                </a>
                            </li>
                        }
                        @for (var i = 1; i <= Model.Pagination.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", "Claim", new { Area = "Provider", pageNumber = i, searchString = Model.SearchString, pageSize = Model.Pagination.PageSize })">@i</a>
                            </li>
                        }
                        @if (Model.Pagination.HasNext)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", "Claim", new { Area = "Provider", pageNumber = Model.Pagination.CurrentPage + 1, searchString = Model.SearchString, pageSize = Model.Pagination.PageSize })">
                                    <span aria-hidden="true">
                                        <i class="fas fa-angle-right"></i>
                                    </span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    }
</div>
